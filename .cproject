<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.118402673">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.118402673" moduleId="org.eclipse.cdt.core.settings" name="FuzzonCov_Debug">
				<externalSettings>
					<externalSetting>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/fuzzon_exec"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/fuzzon"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/fuzzon_exec/Debug"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/fuzzon/Debug"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/fuzzon/FuzzonCov Debug"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/fuzzon/FuzzonCov_Debug"/>
						<entry flags="RESOLVED" kind="libraryFile" name="fuzzon_exec" srcPrefixMapping="" srcRootPath=""/>
						<entry flags="RESOLVED" kind="libraryFile" name="fuzzon" srcPrefixMapping="" srcRootPath=""/>
					</externalSetting>
				</externalSettings>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactExtension="a" artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.staticLib,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" errorParsers="org.eclipse.cdt.core.GASErrorParser;org.eclipse.cdt.core.GCCErrorParser" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.118402673" name="FuzzonCov_Debug" parent="cdt.managedbuild.config.llvm.clang.linux.exe.debug" postannouncebuildStep="" postbuildStep="" preannouncebuildStep="" prebuildStep="">
					<folderInfo id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.118402673." name="/" resourcePath="">
						<toolChain errorParsers="" id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug.1845871956" name="LLVM with Clang (Linux)" superClass="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug">
							<targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF" id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug.943005615" name="Debug Platform" osList="linux,hpux,aix,qnx" superClass="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug"/>
							<builder autoBuildTarget="" buildPath="${workspace_loc:/fuzzon}/Debug" cleanBuildTarget="" enableAutoBuild="false" enableCleanBuild="true" enabledIncrementalBuild="true" errorParsers="" id="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug.1608691991" incrementalBuildTarget="" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CDT Internal Builder" parallelBuildOn="false" superClass="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug"/>
							<tool command="llvm-as-4.0" commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" errorParsers="org.eclipse.cdt.core.GASErrorParser" id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug.1881733079" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug">
								<option id="llvm.both.asm.option.version.292547384" name="Announce version (-v)" superClass="llvm.both.asm.option.version" useByScannerDiscovery="false" value="true" valueType="boolean"/>
							</tool>
							<tool command="llvm-ar-4.0" commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" errorParsers="" id="cdt.managedbuild.tool.llvm.archiver.base.1627518127" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base">
								<option id="llvm.both.lib.option.flags.1339646382" name="Archiver flags" superClass="llvm.both.lib.option.flags" useByScannerDiscovery="false" value="rcs" valueType="string"/>
								<option id="llvm.lib.option.print.contents.684219337" name="Print the table of contents" superClass="llvm.lib.option.print.contents" useByScannerDiscovery="false" value="false" valueType="boolean"/>
								<option id="llvm.lib.option.delete.1412347628" name="Delete files from the archive" superClass="llvm.lib.option.delete" useByScannerDiscovery="false" value="false" valueType="boolean"/>
							</tool>
							<tool command="clang-4.0" commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" errorParsers="org.eclipse.cdt.core.GCCErrorParser" id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug.1900492659" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.1565830989" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.502569012" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std.1471488856" name="Language standard" superClass="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.c.compiler.dialect.c11" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.preprocessor.def.1392404660" name="Defined symbols (-D)" superClass="llvm.c_cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="LOGGING_ENABLED"/>
								</option>
								<option id="llvm.c_cpp.compiler.option.misc.other.313780542" name="Other flags" superClass="llvm.c_cpp.compiler.option.misc.other" useByScannerDiscovery="false" value="-S -fmessage-length=0" valueType="string"/>
								<inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.648010549" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
							</tool>
							<tool command="clang++-4.0" commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" errorParsers="org.eclipse.cdt.core.GCCErrorParser" id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug.1897907040" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.822338999" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1535713727" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std.968833520" name="Language standard" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.c++1y" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.preprocessor.def.1515919224" name="Defined symbols (-D)" superClass="llvm.c_cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="LOGGING_ENABLED"/>
								</option>
								<option id="llvm.c_cpp.compiler.option.optimization.flags.1239073005" name="Other optimization flags" superClass="llvm.c_cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="" valueType="string"/>
								<option id="llvm.c_cpp.compiler.option.misc.other.12198974" name="Other flags" superClass="llvm.c_cpp.compiler.option.misc.other" useByScannerDiscovery="false" value="-c -fmessage-length=0" valueType="string"/>
								<option id="llvm.c_cpp.compiler.option.include.paths.1780168269" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/fuzzon/shared}&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.1343542589" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug.1654401772" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.946315178" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
							</tool>
							<tool command="clang++-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug.821920545" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.116672176" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" useByScannerDiscovery="false" valueType="boolean"/>
								<option id="llvm.c.link.option.libs.811129141" name="Libraries (-l)" superClass="llvm.c.link.option.libs" useByScannerDiscovery="false" valueType="libs">
									<listOptionValue builtIn="false" value="stdc++"/>
								</option>
								<option id="llvm.c.link.option.paths.819846175" name="Library search path (-L)" superClass="llvm.c.link.option.paths" useByScannerDiscovery="false" valueType="libPaths">
									<listOptionValue builtIn="false" value="/usr/lib/gcc/x86_64-linux-gnu/6/"/>
								</option>
								<option id="llvm.c.link.base.option.ldflags.1202521568" name="Linker flags" superClass="llvm.c.link.base.option.ldflags" useByScannerDiscovery="false" value="-lpthread -lboost_system -lboost_filesystem -lboost_date_time  -lboost_thread -lboost_log_setup -lboost_log  -lboost_iostreams -lboost_regex -lboost_program_options" valueType="string"/>
								<inputType id="cdt.managedbuild.tool.llvm.c.linker.input.613107903" superClass="cdt.managedbuild.tool.llvm.c.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry flags="VALUE_WORKSPACE_PATH" kind="sourcePath" name="cov"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="sourcePath" name="shared"/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.765337352">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.765337352" moduleId="org.eclipse.cdt.core.settings" name="Unit_Test">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.765337352" name="Unit_Test" parent="cdt.managedbuild.config.llvm.clang.linux.exe.debug">
					<folderInfo id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.765337352." name="/" resourcePath="">
						<toolChain id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug.1110168847" name="LLVM with Clang (Linux)" superClass="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug">
							<targetPlatform archList="all" id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug.21105631" name="Debug Platform" osList="linux,hpux,aix,qnx" superClass="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug"/>
							<builder buildPath="${workspace_loc:/fuzzon}/Unit Test" id="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug.1788576814" keepEnvironmentInBuildfile="false" name="CDT Internal Builder" superClass="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug"/>
							<tool command="llvm-as-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug.1542228169" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug"/>
							<tool id="cdt.managedbuild.tool.llvm.archiver.base.174303374" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base"/>
							<tool command="clang-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug.422176048" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.608671320" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.264851714" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std.1987004531" name="Language standard" superClass="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.c.compiler.dialect.c11" valueType="enumerated"/>
								<inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.1717479921" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
							</tool>
							<tool command="clang++-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug.1344079161" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.770819040" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1504663660" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std.1439245303" name="Language standard" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.c++1y" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.misc.other.752328581" name="Other flags" superClass="llvm.c_cpp.compiler.option.misc.other" useByScannerDiscovery="false" value="-c -fmessage-length=0" valueType="string"/>
								<option id="llvm.c_cpp.compiler.option.preprocessor.def.1210765448" name="Defined symbols (-D)" superClass="llvm.c_cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="UNIT_TEST"/>
								</option>
								<option id="llvm.c_cpp.compiler.option.include.paths.901091661" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="/usr/include/c++/6"/>
									<listOptionValue builtIn="false" value="/usr/local/include"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/fuzzon/shared}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/fuzzon/src}&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.840470498" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug.400053742" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.1765298664" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
							</tool>
							<tool command="clang++-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug.393202860" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.160472794" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" useByScannerDiscovery="false" valueType="boolean"/>
								<option id="llvm.c.link.option.libs.499398741" name="Libraries (-l)" superClass="llvm.c.link.option.libs" useByScannerDiscovery="false" valueType="libs">
									<listOptionValue builtIn="false" value="stdc++"/>
								</option>
								<option id="llvm.c.link.option.paths.459119494" name="Library search path (-L)" superClass="llvm.c.link.option.paths" useByScannerDiscovery="false" valueType="libPaths">
									<listOptionValue builtIn="false" value="/usr/lib/gcc/x86_64-linux-gnu/6/"/>
								</option>
								<option id="llvm.c.link.option.stats.760117985" name="Print statistics" superClass="llvm.c.link.option.stats" useByScannerDiscovery="false" value="false" valueType="boolean"/>
								<option id="llvm.c.link.base.option.ldflags.155398885" name="Linker flags" superClass="llvm.c.link.base.option.ldflags" useByScannerDiscovery="false" value="-lpthread -lboost_unit_test_framework  -lboost_program_options -lboost_thread -lboost_date_time -lboost_log_setup -lboost_filesystem -lboost_exception -lboost_system -lboost_regex -lboost_log -lboost_serialization -lboost_random -lboost_iostreams -lrt -lcrypto" valueType="string"/>
								<inputType id="cdt.managedbuild.tool.llvm.c.linker.input.1421982675" superClass="cdt.managedbuild.tool.llvm.c.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry flags="VALUE_WORKSPACE_PATH" kind="sourcePath" name="shared"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="sourcePath" name="src"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="sourcePath" name="test/unit"/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.573544837">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.573544837" moduleId="org.eclipse.cdt.core.settings" name="Fuzzon_Debug">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactExtension="" artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.573544837" name="Fuzzon_Debug" parent="cdt.managedbuild.config.llvm.clang.linux.exe.debug">
					<folderInfo id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.573544837." name="/" resourcePath="">
						<toolChain id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug.362462928" name="LLVM with Clang (Linux)" superClass="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug">
							<targetPlatform archList="all" id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug.1513836247" name="Debug Platform" osList="linux,hpux,aix,qnx" superClass="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug"/>
							<builder buildPath="${workspace_loc:/fuzzon}/Fuzzon Debug" id="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug.852784261" keepEnvironmentInBuildfile="false" name="CDT Internal Builder" superClass="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug"/>
							<tool command="llvm-as-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug.2098121286" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug"/>
							<tool id="cdt.managedbuild.tool.llvm.archiver.base.2097659327" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base"/>
							<tool command="clang-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug.1576307959" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.1895322368" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1121490911" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std.1448913873" name="Language standard" superClass="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.c.compiler.dialect.c11" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.preprocessor.def.1310804978" name="Defined symbols (-D)" superClass="llvm.c_cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="LOGGING_ENABLED"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.1435618120" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
							</tool>
							<tool command="clang++-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug.335675434" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.1064959635" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.384243224" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std.246284097" name="Language standard" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.c++1y" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.include.paths.791979279" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/fuzzon/shared}&quot;"/>
								</option>
								<option id="llvm.c_cpp.compiler.option.preprocessor.def.69047060" name="Defined symbols (-D)" superClass="llvm.c_cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="LOGGING_ENABLED"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.1958664152" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug.1053267791" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.2090322686" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
							</tool>
							<tool command="clang++-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug.2069827929" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.2145760777" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" useByScannerDiscovery="false" valueType="boolean"/>
								<option id="llvm.c.link.option.libs.1665237814" name="Libraries (-l)" superClass="llvm.c.link.option.libs" useByScannerDiscovery="false" valueType="libs">
									<listOptionValue builtIn="false" value="stdc++"/>
								</option>
								<option id="llvm.c.link.option.paths.2077662284" name="Library search path (-L)" superClass="llvm.c.link.option.paths" useByScannerDiscovery="false" valueType="libPaths">
									<listOptionValue builtIn="false" value="/usr/lib/gcc/x86_64-linux-gnu/6/"/>
								</option>
								<option id="llvm.c.link.base.option.ldflags.2033329458" name="Linker flags" superClass="llvm.c.link.base.option.ldflags" useByScannerDiscovery="false" value="-lpthread  -lboost_program_options -lboost_thread -lboost_date_time -lboost_log_setup -lboost_filesystem -lboost_exception -lboost_system -lboost_regex -lboost_log -lboost_serialization -lboost_random -lboost_iostreams -lrt -lcrypto" valueType="string"/>
								<inputType id="cdt.managedbuild.tool.llvm.c.linker.input.1530017135" superClass="cdt.managedbuild.tool.llvm.c.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry flags="VALUE_WORKSPACE_PATH" kind="sourcePath" name="shared"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="sourcePath" name="src"/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.118402673.498176439">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.118402673.498176439" moduleId="org.eclipse.cdt.core.settings" name="FuzzonCov_Release">
				<externalSettings>
					<externalSetting>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/fuzzon"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/fuzzon/FuzzonCov_Release"/>
						<entry flags="RESOLVED" kind="libraryFile" name="fuzzon" srcPrefixMapping="" srcRootPath=""/>
					</externalSetting>
				</externalSettings>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactExtension="a" artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.staticLib,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" errorParsers="org.eclipse.cdt.core.GASErrorParser;org.eclipse.cdt.core.GCCErrorParser" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.118402673.498176439" name="FuzzonCov_Release" parent="cdt.managedbuild.config.llvm.clang.linux.exe.debug" postannouncebuildStep="" postbuildStep="" preannouncebuildStep="" prebuildStep="">
					<folderInfo id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.118402673.498176439." name="/" resourcePath="">
						<toolChain errorParsers="" id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug.1644096704" name="LLVM with Clang (Linux)" superClass="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug">
							<targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF" id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug.1804922289" name="Debug Platform" osList="linux,hpux,aix,qnx" superClass="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug"/>
							<builder autoBuildTarget="" buildPath="${workspace_loc:/fuzzon}/Debug" cleanBuildTarget="" enableAutoBuild="false" enableCleanBuild="true" enabledIncrementalBuild="true" errorParsers="" id="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug.600962418" incrementalBuildTarget="" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CDT Internal Builder" parallelBuildOn="false" superClass="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug"/>
							<tool command="llvm-as-4.0" commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" errorParsers="org.eclipse.cdt.core.GASErrorParser" id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug.1654894013" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug">
								<option id="llvm.both.asm.option.version.158969214" name="Announce version (-v)" superClass="llvm.both.asm.option.version" useByScannerDiscovery="false" value="true" valueType="boolean"/>
							</tool>
							<tool command="llvm-ar-4.0" commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" errorParsers="" id="cdt.managedbuild.tool.llvm.archiver.base.1467238980" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base">
								<option id="llvm.both.lib.option.flags.514959682" name="Archiver flags" superClass="llvm.both.lib.option.flags" useByScannerDiscovery="false" value="rcs" valueType="string"/>
								<option id="llvm.lib.option.print.contents.830664495" name="Print the table of contents" superClass="llvm.lib.option.print.contents" useByScannerDiscovery="false" value="false" valueType="boolean"/>
								<option id="llvm.lib.option.delete.886011195" name="Delete files from the archive" superClass="llvm.lib.option.delete" useByScannerDiscovery="false" value="false" valueType="boolean"/>
							</tool>
							<tool command="clang-4.0" commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" errorParsers="org.eclipse.cdt.core.GCCErrorParser" id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug.377080057" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.11737072" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.most" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1214070767" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.none" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std.880417954" name="Language standard" superClass="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.c.compiler.dialect.c11" valueType="enumerated"/>
								<inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.179749298" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
							</tool>
							<tool command="clang++-4.0" commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" errorParsers="org.eclipse.cdt.core.GCCErrorParser" id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug.1942297230" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.1007582624" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.most" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.50598215" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.none" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std.678019490" name="Language standard" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.c++1y" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.preprocessor.def.186865147" name="Defined symbols (-D)" superClass="llvm.c_cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false"/>
								<option id="llvm.c_cpp.compiler.option.optimization.flags.396666656" name="Other optimization flags" superClass="llvm.c_cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="" valueType="string"/>
								<option id="llvm.c_cpp.compiler.option.misc.other.1783280193" name="Other flags" superClass="llvm.c_cpp.compiler.option.misc.other" useByScannerDiscovery="false" value="-c -fmessage-length=0" valueType="string"/>
								<option id="llvm.c_cpp.compiler.option.include.paths.323554332" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/fuzzon/shared}&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.1073358620" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug.2143571420" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.737766241" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
							</tool>
							<tool command="clang++-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug.156459105" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.1671641707" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" useByScannerDiscovery="false" valueType="boolean"/>
								<option id="llvm.c.link.option.libs.1213099553" name="Libraries (-l)" superClass="llvm.c.link.option.libs" useByScannerDiscovery="false" valueType="libs">
									<listOptionValue builtIn="false" value="stdc++"/>
								</option>
								<option id="llvm.c.link.option.paths.1513379139" name="Library search path (-L)" superClass="llvm.c.link.option.paths" useByScannerDiscovery="false" valueType="libPaths">
									<listOptionValue builtIn="false" value="/usr/lib/gcc/x86_64-linux-gnu/6/"/>
								</option>
								<option id="llvm.c.link.base.option.ldflags.711331466" name="Linker flags" superClass="llvm.c.link.base.option.ldflags" useByScannerDiscovery="false" value="-lpthread -lboost_system -lboost_filesystem -lboost_date_time  -lboost_thread -lboost_log_setup -lboost_log  -lboost_iostreams -lboost_regex -lboost_program_options" valueType="string"/>
								<inputType id="cdt.managedbuild.tool.llvm.c.linker.input.851690995" superClass="cdt.managedbuild.tool.llvm.c.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry flags="VALUE_WORKSPACE_PATH" kind="sourcePath" name="cov"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="sourcePath" name="shared"/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.573544837.900166189">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.573544837.900166189" moduleId="org.eclipse.cdt.core.settings" name="Fuzzon_Release">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.573544837.900166189" name="Fuzzon_Release" parent="cdt.managedbuild.config.llvm.clang.linux.exe.debug">
					<folderInfo id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.573544837.900166189." name="/" resourcePath="">
						<toolChain id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug.1750223295" name="LLVM with Clang (Linux)" superClass="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug">
							<targetPlatform archList="all" id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug.1362656464" name="Debug Platform" osList="linux,hpux,aix,qnx" superClass="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug"/>
							<builder buildPath="${workspace_loc:/fuzzon}/Fuzzon Debug" id="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug.1311074924" keepEnvironmentInBuildfile="false" name="CDT Internal Builder" superClass="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug"/>
							<tool command="llvm-as-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug.1142868275" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug"/>
							<tool id="cdt.managedbuild.tool.llvm.archiver.base.417622575" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base"/>
							<tool command="clang-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug.51835818" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.236025768" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.most" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1402591648" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.none" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std.1890987049" name="Language standard" superClass="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.c.compiler.dialect.c11" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.preprocessor.def.3325364" name="Defined symbols (-D)" superClass="llvm.c_cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false"/>
								<inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.670888879" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
							</tool>
							<tool command="clang++-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug.1124443911" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.377753311" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.most" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1551408977" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std.1361776244" name="Language standard" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.c++1y" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.include.paths.586755227" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/fuzzon/shared}&quot;"/>
								</option>
								<option id="llvm.c_cpp.compiler.option.preprocessor.def.1923158044" name="Defined symbols (-D)" superClass="llvm.c_cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="LOGGING_ENABLED"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.936563295" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug.355146724" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.1871784397" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
							</tool>
							<tool command="clang++-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug.784475164" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.646932747" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" useByScannerDiscovery="false" valueType="boolean"/>
								<option id="llvm.c.link.option.libs.1439399684" name="Libraries (-l)" superClass="llvm.c.link.option.libs" useByScannerDiscovery="false" valueType="libs">
									<listOptionValue builtIn="false" value="stdc++"/>
								</option>
								<option id="llvm.c.link.option.paths.6408229" name="Library search path (-L)" superClass="llvm.c.link.option.paths" useByScannerDiscovery="false" valueType="libPaths">
									<listOptionValue builtIn="false" value="/usr/lib/gcc/x86_64-linux-gnu/6/"/>
								</option>
								<option id="llvm.c.link.base.option.ldflags.557219566" name="Linker flags" superClass="llvm.c.link.base.option.ldflags" useByScannerDiscovery="false" value="-lpthread  -lboost_program_options -lboost_thread -lboost_date_time -lboost_log_setup -lboost_filesystem -lboost_exception -lboost_system -lboost_regex -lboost_log -lboost_serialization -lboost_random -lboost_iostreams -lboost_chrono -lrt -lcrypto" valueType="string"/>
								<inputType id="cdt.managedbuild.tool.llvm.c.linker.input.546797511" superClass="cdt.managedbuild.tool.llvm.c.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry flags="VALUE_WORKSPACE_PATH" kind="sourcePath" name="shared"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="sourcePath" name="src"/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.573544837.876941362">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.573544837.876941362" moduleId="org.eclipse.cdt.core.settings" name="FuzzonFull_Debug">
				<externalSettings>
					<externalSetting>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/fuzzon"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/fuzzon/FuzzonFull_Debug"/>
						<entry flags="RESOLVED" kind="libraryFile" name="fuzzon" srcPrefixMapping="" srcRootPath=""/>
					</externalSetting>
				</externalSettings>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactExtension="a" artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.staticLib,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.573544837.876941362" name="FuzzonFull_Debug" parent="cdt.managedbuild.config.llvm.clang.linux.exe.debug">
					<folderInfo id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.573544837.876941362." name="/" resourcePath="">
						<toolChain id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug.1633198345" name="LLVM with Clang (Linux)" superClass="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug">
							<targetPlatform archList="all" id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug.770826380" name="Debug Platform" osList="linux,hpux,aix,qnx" superClass="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug"/>
							<builder buildPath="${workspace_loc:/fuzzon}/Fuzzon Debug" id="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug.628045241" keepEnvironmentInBuildfile="false" name="CDT Internal Builder" superClass="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug"/>
							<tool command="llvm-as-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug.831504004" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug"/>
							<tool command="llvm-ar-4.0" id="cdt.managedbuild.tool.llvm.archiver.base.71026812" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base">
								<option id="llvm.both.lib.option.flags.1304178201" name="Archiver flags" superClass="llvm.both.lib.option.flags" useByScannerDiscovery="false" value="rcs" valueType="string"/>
								<option id="llvm.lib.option.print.contents.490029887" name="Print the table of contents" superClass="llvm.lib.option.print.contents" useByScannerDiscovery="false" value="false" valueType="boolean"/>
							</tool>
							<tool command="clang-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug.1637398722" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.920819104" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.411095629" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std.762703243" name="Language standard" superClass="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.c.compiler.dialect.c11" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.preprocessor.def.1068490665" name="Defined symbols (-D)" superClass="llvm.c_cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="LOGGING_ENABLED"/>
									<listOptionValue builtIn="false" value="ALTERNATIVE_MAIN"/>
								</option>
								<option id="llvm.c_cpp.compiler.option.misc.other.410701753" name="Other flags" superClass="llvm.c_cpp.compiler.option.misc.other" useByScannerDiscovery="false" value="-c -fmessage-length=0" valueType="string"/>
								<option id="llvm.c_cpp.compiler.option.optimization.flags.959694078" name="Other optimization flags" superClass="llvm.c_cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="" valueType="string"/>
								<inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.560243371" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
							</tool>
							<tool command="clang++-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug.27306426" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.1875320407" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.917084957" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std.1463608087" name="Language standard" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.c++1y" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.include.paths.939058594" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/fuzzon/shared}&quot;"/>
								</option>
								<option id="llvm.c_cpp.compiler.option.preprocessor.def.337216231" name="Defined symbols (-D)" superClass="llvm.c_cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="LOGGING_ENABLED"/>
									<listOptionValue builtIn="false" value="EXTERN_FUZZZON_ENTRY_POINT"/>
								</option>
								<option id="llvm.c_cpp.compiler.option.misc.other.907697818" name="Other flags" superClass="llvm.c_cpp.compiler.option.misc.other" useByScannerDiscovery="false" value="-c -fmessage-length=0" valueType="string"/>
								<option id="llvm.c_cpp.compiler.option.optimization.flags.2119643292" name="Other optimization flags" superClass="llvm.c_cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="" valueType="string"/>
								<inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.1115847552" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug.506309544" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.96336943" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
							</tool>
							<tool command="clang++-4.0" id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug.1242706559" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.1372156518" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" useByScannerDiscovery="false" valueType="boolean"/>
								<option id="llvm.c.link.option.libs.1997800908" name="Libraries (-l)" superClass="llvm.c.link.option.libs" useByScannerDiscovery="false" valueType="libs">
									<listOptionValue builtIn="false" value="stdc++"/>
								</option>
								<option id="llvm.c.link.option.paths.966525875" name="Library search path (-L)" superClass="llvm.c.link.option.paths" useByScannerDiscovery="false" valueType="libPaths">
									<listOptionValue builtIn="false" value="/usr/lib/gcc/x86_64-linux-gnu/6/"/>
								</option>
								<option id="llvm.c.link.base.option.ldflags.2014980052" name="Linker flags" superClass="llvm.c.link.base.option.ldflags" useByScannerDiscovery="false" value="-lpthread  -lboost_program_options -lboost_thread -lboost_date_time -lboost_log_setup -lboost_filesystem -lboost_exception -lboost_system -lboost_regex -lboost_log -lboost_serialization -lboost_random -lboost_iostreams -lrt -lcrypto" valueType="string"/>
								<inputType id="cdt.managedbuild.tool.llvm.c.linker.input.1120009309" superClass="cdt.managedbuild.tool.llvm.c.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry flags="VALUE_WORKSPACE_PATH" kind="sourcePath" name="cov"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="sourcePath" name="shared"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="sourcePath" name="src"/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="fuzzon.cdt.managedbuild.target.llvm.clang.linux.exe.843291335" name="Executable" projectType="cdt.managedbuild.target.llvm.clang.linux.exe"/>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
	<storageModule moduleId="refreshScope" versionNumber="2">
		<configuration configurationName="Unit_Test"/>
		<configuration configurationName="Fuzzon_Release"/>
		<configuration configurationName="FuzzonCov_Debug">
			<resource resourceType="PROJECT" workspacePath="/fuzzon"/>
		</configuration>
		<configuration configurationName="FuzzonCov_Release"/>
		<configuration configurationName="Unit Test">
			<resource resourceType="PROJECT" workspacePath="/fuzzon"/>
		</configuration>
		<configuration configurationName="Fuzzon_Debug"/>
		<configuration configurationName="Release">
			<resource resourceType="PROJECT" workspacePath="/fuzzon"/>
		</configuration>
		<configuration configurationName="Debug">
			<resource resourceType="PROJECT" workspacePath="/fuzzon"/>
		</configuration>
		<configuration configurationName="FuzzonFull_Debug">
			<resource resourceType="PROJECT" workspacePath="/fuzzon"/>
		</configuration>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.make.core.buildtargets">
		<buildTargets/>
	</storageModule>
</cproject>
